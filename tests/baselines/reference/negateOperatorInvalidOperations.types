=== tests/cases/conformance/expressions/unaryOperators/negateOperator/negateOperatorInvalidOperations.ts ===
// Unary operator -

// operand before -
var NUMBER1 = var NUMBER-;  //expect error
>NUMBER1 : any
> : any
>NUMBER : any
>- : number
> : any

// invalid expressions
var NUMBER2 = -(null - undefined);
>NUMBER2 : number | bigint
>-(null - undefined) : number | bigint
>(null - undefined) : number | bigint
>null - undefined : number | bigint
>null : null
>undefined : undefined

var NUMBER3 = -(null - null);
>NUMBER3 : number | bigint
>-(null - null) : number | bigint
>(null - null) : number | bigint
>null - null : number | bigint
>null : null
>null : null

var NUMBER4 = -(undefined - undefined);
>NUMBER4 : number | bigint
>-(undefined - undefined) : number | bigint
>(undefined - undefined) : number | bigint
>undefined - undefined : number | bigint
>undefined : undefined
>undefined : undefined

// miss operand
var NUMBER =-;
>NUMBER : any
>- : number
> : any

