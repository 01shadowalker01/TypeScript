=== tests/cases/compiler/collisionArgumentsInType.ts ===
"use strict";
var v1: (i: number, ...arguments) => void; // no error - no code gen
>v1 : Symbol(v1, Decl(collisionArgumentsInType.ts, 1, 3))
>i : Symbol(i, Decl(collisionArgumentsInType.ts, 1, 9))
>arguments : Symbol(arguments, Decl(collisionArgumentsInType.ts, 1, 19))

var v12: (arguments: number, ...restParameters) => void; // no error - no code gen
>v12 : Symbol(v12, Decl(collisionArgumentsInType.ts, 2, 3))
>arguments : Symbol(arguments, Decl(collisionArgumentsInType.ts, 2, 10))
>restParameters : Symbol(restParameters, Decl(collisionArgumentsInType.ts, 2, 28))

var v2: {
>v2 : Symbol(v2, Decl(collisionArgumentsInType.ts, 3, 3))

    (arguments: number, ...restParameters); // no error - no code gen
>arguments : Symbol(arguments, Decl(collisionArgumentsInType.ts, 4, 5))
>restParameters : Symbol(restParameters, Decl(collisionArgumentsInType.ts, 4, 23))

    new (arguments: number, ...restParameters); // no error - no code gen
>arguments : Symbol(arguments, Decl(collisionArgumentsInType.ts, 5, 9))
>restParameters : Symbol(restParameters, Decl(collisionArgumentsInType.ts, 5, 27))

    foo(arguments: number, ...restParameters); // no error - no code gen
>foo : Symbol(foo, Decl(collisionArgumentsInType.ts, 5, 47))
>arguments : Symbol(arguments, Decl(collisionArgumentsInType.ts, 6, 8))
>restParameters : Symbol(restParameters, Decl(collisionArgumentsInType.ts, 6, 26))

    prop: (arguments: number, ...restParameters) => void; // no error - no code gen
>prop : Symbol(prop, Decl(collisionArgumentsInType.ts, 6, 46))
>arguments : Symbol(arguments, Decl(collisionArgumentsInType.ts, 7, 11))
>restParameters : Symbol(restParameters, Decl(collisionArgumentsInType.ts, 7, 29))
}
var v21: {
>v21 : Symbol(v21, Decl(collisionArgumentsInType.ts, 9, 3))

    (i: number, ...arguments); // no error - no code gen
>i : Symbol(i, Decl(collisionArgumentsInType.ts, 10, 5))
>arguments : Symbol(arguments, Decl(collisionArgumentsInType.ts, 10, 15))

    new (i: number, ...arguments); // no error - no code gen
>i : Symbol(i, Decl(collisionArgumentsInType.ts, 11, 9))
>arguments : Symbol(arguments, Decl(collisionArgumentsInType.ts, 11, 19))

    foo(i: number, ...arguments); // no error - no code gen
>foo : Symbol(foo, Decl(collisionArgumentsInType.ts, 11, 34))
>i : Symbol(i, Decl(collisionArgumentsInType.ts, 12, 8))
>arguments : Symbol(arguments, Decl(collisionArgumentsInType.ts, 12, 18))

    prop: (i: number, ...arguments) => void; // no error - no code gen
>prop : Symbol(prop, Decl(collisionArgumentsInType.ts, 12, 33))
>i : Symbol(i, Decl(collisionArgumentsInType.ts, 13, 11))
>arguments : Symbol(arguments, Decl(collisionArgumentsInType.ts, 13, 21))
}
