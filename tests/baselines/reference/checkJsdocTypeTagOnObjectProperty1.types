=== tests/cases/conformance/jsdoc/0.js ===
// @ts-check
var lol = "hello Lol"
>lol : string
>"hello Lol" : "hello Lol"

const obj = {
>obj : { [x: string]: any; foo: string | undefined; bar: string | undefined; method1(arg0: number): number; lol: string; }
>{  /** @type {string|undefined} */  foo: undefined,  /** @type {string|undefined} */  bar: "42",  /** @type {function(number): number} */  method1(n1) {      return n1 + 42;  },  /** @type {string} */  lol,  /** @type {number} */  ['b' + 'ar1']: 42,} : { [x: string]: any; foo: string | undefined; bar: string | undefined; method1(arg0: number): number; lol: string; }

  /** @type {string|undefined} */
  foo: undefined,
>foo : string | undefined
>undefined : undefined

  /** @type {string|undefined} */
  bar: "42",
>bar : string | undefined
>"42" : "42"

  /** @type {function(number): number} */
  method1(n1) {
>method1 : (n1: any) => any
>n1 : any

      return n1 + 42;
>n1 + 42 : any
>n1 : any
>42 : 42

  },
  /** @type {string} */
  lol,
>lol : string

  /** @type {number} */
  ['b' + 'ar1']: 42,
>'b' + 'ar1' : string
>'b' : "b"
>'ar1' : "ar1"
>42 : 42
}
obj.foo = 'string'
>obj.foo = 'string' : "string"
>obj.foo : string | undefined
>obj : { [x: string]: any; foo: string | undefined; bar: string | undefined; method1(arg0: number): number; lol: string; }
>foo : string | undefined
>'string' : "string"

obj.lol
>obj.lol : string
>obj : { [x: string]: any; foo: string | undefined; bar: string | undefined; method1(arg0: number): number; lol: string; }
>lol : string

obj.bar = undefined;
>obj.bar = undefined : undefined
>obj.bar : string | undefined
>obj : { [x: string]: any; foo: string | undefined; bar: string | undefined; method1(arg0: number): number; lol: string; }
>bar : string | undefined
>undefined : undefined

var k = obj.method1(0);
>k : number
>obj.method1(0) : number
>obj.method1 : (arg0: number) => number
>obj : { [x: string]: any; foo: string | undefined; bar: string | undefined; method1(arg0: number): number; lol: string; }
>method1 : (arg0: number) => number
>0 : 0

obj.bar1 = "42";
>obj.bar1 = "42" : "42"
>obj.bar1 : any
>obj : { [x: string]: any; foo: string | undefined; bar: string | undefined; method1(arg0: number): number; lol: string; }
>bar1 : any
>"42" : "42"

