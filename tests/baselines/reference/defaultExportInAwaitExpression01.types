=== tests/cases/conformance/es6/modules/a.ts ===
const x = new Promise( ( resolve, reject ) => { resolve( {} ); } );
>x : Promise<{}>
>new Promise( ( resolve, reject ) => { resolve( {} ); } ) : Promise<{}>
>Promise : PromiseConstructor
>( resolve, reject ) => { resolve( {} ); } : (resolve: (value?: {} | Awaitable<{}>) => void, reject: (reason?: any) => void) => void
>resolve : (value?: {} | Awaitable<{}>) => void
>reject : (reason?: any) => void
>resolve( {} ) : void
>resolve : (value?: {} | Awaitable<{}>) => void
>{} : {}

export default x;
>x : Promise<{}>

=== tests/cases/conformance/es6/modules/b.ts ===
import x from './a';
>x : Promise<{}>

( async function() {
>( async function() {    const value = await x;}() ) : Promise<void>
>async function() {    const value = await x;}() : Promise<void>
>async function() {    const value = await x;} : () => Promise<void>

    const value = await x;
>value : {}
>await x : {}
>x : Promise<{}>

}() );

