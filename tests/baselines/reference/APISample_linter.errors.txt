typescript_standalone.d.ts(21,28): error TS1005: ';' expected.
typescript_standalone.d.ts(21,41): error TS1005: ';' expected.
typescript_standalone.d.ts(8926,28): error TS1005: ';' expected.
typescript_standalone.d.ts(8926,42): error TS1005: ';' expected.
typescript_standalone.d.ts(9186,28): error TS1005: ';' expected.
typescript_standalone.d.ts(9186,46): error TS1005: ';' expected.
typescript_standalone.d.ts(9536,28): error TS1005: ';' expected.
typescript_standalone.d.ts(9536,36): error TS1005: ';' expected.
typescript_standalone.d.ts(9560,28): error TS1005: ';' expected.
typescript_standalone.d.ts(9560,36): error TS1005: ';' expected.
typescript_standalone.d.ts(9647,28): error TS1005: ';' expected.
typescript_standalone.d.ts(9647,38): error TS1005: ';' expected.
typescript_standalone.d.ts(10812,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10812,57): error TS1005: ';' expected.
typescript_standalone.d.ts(10823,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10823,41): error TS1005: ';' expected.
typescript_standalone.d.ts(10833,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10833,48): error TS1005: ';' expected.
typescript_standalone.d.ts(10908,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10908,47): error TS1005: ';' expected.
typescript_standalone.d.ts(10965,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10965,47): error TS1005: ';' expected.
typescript_standalone.d.ts(11019,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11019,52): error TS1005: ';' expected.
typescript_standalone.d.ts(11039,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11039,44): error TS1005: ';' expected.
typescript_standalone.d.ts(11049,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11049,35): error TS1005: ';' expected.
typescript_standalone.d.ts(11083,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11083,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11086,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11086,43): error TS1005: ';' expected.
typescript_standalone.d.ts(11090,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11090,45): error TS1005: ';' expected.
typescript_standalone.d.ts(11108,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11108,56): error TS1005: ';' expected.
typescript_standalone.d.ts(11134,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11134,36): error TS1005: ';' expected.
typescript_standalone.d.ts(11137,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11137,43): error TS1005: ';' expected.
typescript_standalone.d.ts(11149,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11149,43): error TS1005: ';' expected.
typescript_standalone.d.ts(11179,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11179,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11213,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11213,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11224,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11224,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11248,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11248,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11256,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11256,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11260,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11260,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11290,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11290,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11333,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11333,41): error TS1005: ';' expected.
typescript_standalone.d.ts(11520,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11520,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11522,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11522,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11526,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11526,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11528,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11528,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11530,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11530,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11532,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11532,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11534,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11534,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11543,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11543,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11545,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11545,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11547,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11547,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11549,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11549,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11551,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11551,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11553,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11553,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11555,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11555,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11557,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11557,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11559,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11559,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11561,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11561,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11563,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11563,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11565,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11565,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11567,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11567,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11569,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11569,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11571,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11571,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11581,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11581,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11583,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11583,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11585,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11585,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11587,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11587,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11589,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11589,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11591,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11591,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11593,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11593,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11595,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11595,72): error TS1005: ';' expected.
typescript_standalone.d.ts(11597,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11597,52): error TS1005: ';' expected.
typescript_standalone.d.ts(11669,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11669,72): error TS1005: ';' expected.
typescript_standalone.d.ts(11671,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11671,38): error TS1005: ';' expected.
typescript_standalone.d.ts(11673,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11673,71): error TS1005: ';' expected.
typescript_standalone.d.ts(11675,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11675,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11751,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11751,48): error TS1005: ';' expected.


==== tests/cases/compiler/APISample_linter.ts (0 errors) ====
    /*
     * Note: This test is a public API sample. The sample sources can be found 
             at: https://github.com/Microsoft/TypeScript/wiki/Using-the-Compiler-API#traversing-the-ast-with-a-little-linter
     *       Please log a "breaking change" issue for any API breaking change affecting this issue
     */
    
    declare var process: any;
    declare var console: any;
    declare var readFileSync: any;
    
    import * as ts from "typescript";
    
    export function delint(sourceFile: ts.SourceFile) {
        delintNode(sourceFile);
    
        function delintNode(node: ts.Node) {
            switch (node.kind) {
                case ts.SyntaxKind.ForStatement:
                case ts.SyntaxKind.ForInStatement:
                case ts.SyntaxKind.WhileStatement:
                case ts.SyntaxKind.DoStatement:
                    if ((<ts.IterationStatement>node).statement.kind !== ts.SyntaxKind.Block) {
                        report(node, "A looping statement's contents should be wrapped in a block body.");
                    }
                    break;
    
                case ts.SyntaxKind.IfStatement:
                    let ifStatement = (<ts.IfStatement>node);
                    if (ifStatement.thenStatement.kind !== ts.SyntaxKind.Block) {
                        report(ifStatement.thenStatement, "An if statement's contents should be wrapped in a block body.");
                    }
                    if (ifStatement.elseStatement &&
                        ifStatement.elseStatement.kind !== ts.SyntaxKind.Block &&
                        ifStatement.elseStatement.kind !== ts.SyntaxKind.IfStatement) {
                        report(ifStatement.elseStatement, "An else statement's contents should be wrapped in a block body.");
                    }
                    break;
    
                case ts.SyntaxKind.BinaryExpression:
                    let op = (<ts.BinaryExpression>node).operatorToken.kind;
                    if (op === ts.SyntaxKind.EqualsEqualsToken || op == ts.SyntaxKind.ExclamationEqualsToken) {
                        report(node, "Use '===' and '!=='.")
                    }
                    break;
            }
    
            ts.forEachChild(node, delintNode);
        }
    
        function report(node: ts.Node, message: string) {
            let { line, character } = sourceFile.getLineAndCharacterOfPosition(node.getStart());
            console.log(`${sourceFile.fileName} (${line + 1},${character + 1}): ${message}`);
        }
    }
    
    const fileNames: string[] = process.argv.slice(2);
    fileNames.forEach(fileName => {
        // Parse a file
        let sourceFile = ts.createSourceFile(fileName, readFileSync(fileName).toString(), ts.ScriptTarget.ES2015, /*setParentNodes */ true);
    
        // delint it
        delint(sourceFile);
    });