typescript_standalone.d.ts(21,28): error TS1005: ';' expected.
typescript_standalone.d.ts(21,41): error TS1005: ';' expected.
typescript_standalone.d.ts(8907,28): error TS1005: ';' expected.
typescript_standalone.d.ts(8907,42): error TS1005: ';' expected.
typescript_standalone.d.ts(9167,28): error TS1005: ';' expected.
typescript_standalone.d.ts(9167,46): error TS1005: ';' expected.
typescript_standalone.d.ts(9517,28): error TS1005: ';' expected.
typescript_standalone.d.ts(9517,36): error TS1005: ';' expected.
typescript_standalone.d.ts(9541,28): error TS1005: ';' expected.
typescript_standalone.d.ts(9541,36): error TS1005: ';' expected.
typescript_standalone.d.ts(9628,28): error TS1005: ';' expected.
typescript_standalone.d.ts(9628,38): error TS1005: ';' expected.
typescript_standalone.d.ts(10792,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10792,57): error TS1005: ';' expected.
typescript_standalone.d.ts(10803,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10803,41): error TS1005: ';' expected.
typescript_standalone.d.ts(10813,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10813,48): error TS1005: ';' expected.
typescript_standalone.d.ts(10888,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10888,47): error TS1005: ';' expected.
typescript_standalone.d.ts(10945,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10945,47): error TS1005: ';' expected.
typescript_standalone.d.ts(10999,28): error TS1005: ';' expected.
typescript_standalone.d.ts(10999,52): error TS1005: ';' expected.
typescript_standalone.d.ts(11019,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11019,44): error TS1005: ';' expected.
typescript_standalone.d.ts(11029,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11029,35): error TS1005: ';' expected.
typescript_standalone.d.ts(11063,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11063,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11066,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11066,43): error TS1005: ';' expected.
typescript_standalone.d.ts(11070,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11070,45): error TS1005: ';' expected.
typescript_standalone.d.ts(11088,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11088,56): error TS1005: ';' expected.
typescript_standalone.d.ts(11114,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11114,36): error TS1005: ';' expected.
typescript_standalone.d.ts(11117,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11117,43): error TS1005: ';' expected.
typescript_standalone.d.ts(11129,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11129,43): error TS1005: ';' expected.
typescript_standalone.d.ts(11159,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11159,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11193,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11193,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11204,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11204,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11228,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11228,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11236,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11236,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11240,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11240,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11270,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11270,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11313,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11313,41): error TS1005: ';' expected.
typescript_standalone.d.ts(11500,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11500,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11502,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11502,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11506,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11506,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11508,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11508,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11510,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11510,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11512,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11512,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11514,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11514,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11523,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11523,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11525,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11525,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11527,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11527,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11529,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11529,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11531,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11531,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11533,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11533,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11535,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11535,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11537,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11537,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11539,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11539,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11541,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11541,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11543,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11543,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11545,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11545,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11547,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11547,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11549,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11549,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11551,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11551,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11561,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11561,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11563,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11563,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11565,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11565,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11567,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11567,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11569,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11569,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11571,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11571,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11573,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11573,37): error TS1005: ';' expected.
typescript_standalone.d.ts(11575,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11575,72): error TS1005: ';' expected.
typescript_standalone.d.ts(11577,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11577,52): error TS1005: ';' expected.
typescript_standalone.d.ts(11649,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11649,72): error TS1005: ';' expected.
typescript_standalone.d.ts(11651,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11651,38): error TS1005: ';' expected.
typescript_standalone.d.ts(11653,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11653,40): error TS1005: ';' expected.
typescript_standalone.d.ts(11729,28): error TS1005: ';' expected.
typescript_standalone.d.ts(11729,48): error TS1005: ';' expected.


==== tests/cases/compiler/APISample_linter.ts (0 errors) ====
    /*
     * Note: This test is a public API sample. The sample sources can be found 
             at: https://github.com/Microsoft/TypeScript/wiki/Using-the-Compiler-API#traversing-the-ast-with-a-little-linter
     *       Please log a "breaking change" issue for any API breaking change affecting this issue
     */
    
    declare var process: any;
    declare var console: any;
    declare var readFileSync: any;
    
    import * as ts from "typescript";
    
    export function delint(sourceFile: ts.SourceFile) {
        delintNode(sourceFile);
    
        function delintNode(node: ts.Node) {
            switch (node.kind) {
                case ts.SyntaxKind.ForStatement:
                case ts.SyntaxKind.ForInStatement:
                case ts.SyntaxKind.WhileStatement:
                case ts.SyntaxKind.DoStatement:
                    if ((<ts.IterationStatement>node).statement.kind !== ts.SyntaxKind.Block) {
                        report(node, "A looping statement's contents should be wrapped in a block body.");
                    }
                    break;
    
                case ts.SyntaxKind.IfStatement:
                    let ifStatement = (<ts.IfStatement>node);
                    if (ifStatement.thenStatement.kind !== ts.SyntaxKind.Block) {
                        report(ifStatement.thenStatement, "An if statement's contents should be wrapped in a block body.");
                    }
                    if (ifStatement.elseStatement &&
                        ifStatement.elseStatement.kind !== ts.SyntaxKind.Block &&
                        ifStatement.elseStatement.kind !== ts.SyntaxKind.IfStatement) {
                        report(ifStatement.elseStatement, "An else statement's contents should be wrapped in a block body.");
                    }
                    break;
    
                case ts.SyntaxKind.BinaryExpression:
                    let op = (<ts.BinaryExpression>node).operatorToken.kind;
                    if (op === ts.SyntaxKind.EqualsEqualsToken || op == ts.SyntaxKind.ExclamationEqualsToken) {
                        report(node, "Use '===' and '!=='.")
                    }
                    break;
            }
    
            ts.forEachChild(node, delintNode);
        }
    
        function report(node: ts.Node, message: string) {
            let { line, character } = sourceFile.getLineAndCharacterOfPosition(node.getStart());
            console.log(`${sourceFile.fileName} (${line + 1},${character + 1}): ${message}`);
        }
    }
    
    const fileNames: string[] = process.argv.slice(2);
    fileNames.forEach(fileName => {
        // Parse a file
        let sourceFile = ts.createSourceFile(fileName, readFileSync(fileName).toString(), ts.ScriptTarget.ES2015, /*setParentNodes */ true);
    
        // delint it
        delint(sourceFile);
    });