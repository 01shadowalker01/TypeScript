tests/cases/conformance/types/tuple/tupleSpreadCall.ts(14,5): error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
tests/cases/conformance/types/tuple/tupleSpreadCall.ts(16,10): error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
tests/cases/conformance/types/tuple/tupleSpreadCall.ts(18,7): error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
tests/cases/conformance/types/tuple/tupleSpreadCall.ts(27,7): error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
tests/cases/conformance/types/tuple/tupleSpreadCall.ts(28,1): error TS2554: Expected 3 arguments, but got 4.
tests/cases/conformance/types/tuple/tupleSpreadCall.ts(33,1): error TS2554: Expected 1-2 arguments, but got 3.
tests/cases/conformance/types/tuple/tupleSpreadCall.ts(36,1): error TS2554: Expected 2-3 arguments, but got 1.


==== tests/cases/conformance/types/tuple/tupleSpreadCall.ts (7 errors) ====
    declare let singleton: [number]
    declare let pair: [number, number]
    declare let wpair: [number, string]
    declare let triple: [number, number, number]
    declare let ns: number[]
    declare function one(n: number): void;
    declare function two(n: number, m: number): void;
    declare function three(n: number, m: number, total: number): void;
    declare function opt2(n: number, m?: number): void;
    declare function opt3(n: number, m: number, total?: number): void;
    declare function rest(n: number, ...ns: number[]): void;
    
    two(...pair)
    two(...wpair) // wrong type
        ~~~~~~~~
!!! error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
    three(1, ...pair)
    three(1, ...wpair) // wrong type
             ~~~~~~~~
!!! error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
    three(...pair, 1)
    three(...wpair, 1) // wrong type
          ~~~~~~~~
!!! error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
    
    // multiple spreads
    three(...singleton, ...pair);
    three(...pair, ...singleton);
    three(12, ...singleton, ...singleton);
    three(...singleton, 12, ...singleton);
    three(...singleton, ...singleton, 12);
    
    three(...wpair, ...singleton); // wrong type
          ~~~~~~~~
!!! error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
    three(...pair, ...pair); // Expected 3, got 4
    ~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2554: Expected 3 arguments, but got 4.
    
    // optionals (exact and inexact)
    opt2(...pair);
    opt2(1, ...singleton);
    opt2(...pair, 1); // Expected 1-2, got 3
    ~~~~~~~~~~~~~~~~
!!! error TS2554: Expected 1-2 arguments, but got 3.
    opt2(...singleton);
    
    opt3(...singleton); // Expected 2-3, got 1
    ~~~~~~~~~~~~~~~~~~
!!! error TS2554: Expected 2-3 arguments, but got 1.
    opt3(...singleton, ...pair);
    
    // OK: arrays of any length are spreadable into optional arguments
    opt2(...triple);
    opt2(1, ...pair);
    opt3(...singleton, 2, ...triple);
    opt3(2, ...triple);
    opt3(2, ...singleton, ...triple);
    opt3(2, 3, ...triple);
    opt3(...singleton, 2, ...ns);
    opt3(2, ...singleton, ...ns);
    
    // TODO: calls with rests (exact and inexact), overloads, generics
    