tests/cases/conformance/jsx/checkJsxChildrenCanBeTupleType.tsx(17,17): error TS2755: No suitable overload for this call.


==== tests/cases/conformance/jsx/checkJsxChildrenCanBeTupleType.tsx (1 errors) ====
    /// <reference path="/.lib/react16.d.ts" />
    
    import React from 'react'
    
    interface ResizablePanelProps {
      children: [React.ReactNode, React.ReactNode]
    }
    
    class ResizablePanel extends React.Component<
      ResizablePanelProps, any> {}
    
    const test = <ResizablePanel>
      <div />
      <div />
    </ResizablePanel>
    
    const testErr = <ResizablePanel>
                    ~~~~~~~~~~~~~~~~
!!! error TS2755: No suitable overload for this call.
!!! related TS2757 tests/cases/conformance/jsx/checkJsxChildrenCanBeTupleType.tsx:17:18: Overload 1 of 2, '(props: Readonly<ResizablePanelProps>): ResizablePanel', gave the following error.
  Type '{ children: [Element, Element, Element]; }' is not assignable to type 'Readonly<ResizablePanelProps>'.
    Types of property 'children' are incompatible.
      Type '[Element, Element, Element]' is not assignable to type '[ReactNode, ReactNode]'.
        Types of property 'length' are incompatible.
          Type '3' is not assignable to type '2'.
!!! related TS2757 tests/cases/conformance/jsx/checkJsxChildrenCanBeTupleType.tsx:17:18: Overload 2 of 2, '(props: ResizablePanelProps, context?: any): ResizablePanel', gave the following error.
  Type '{ children: [Element, Element, Element]; }' is not assignable to type 'Readonly<ResizablePanelProps>'.
    Types of property 'children' are incompatible.
      Type '[Element, Element, Element]' is not assignable to type '[ReactNode, ReactNode]'.
      <div />
      <div />
      <div />
    </ResizablePanel>