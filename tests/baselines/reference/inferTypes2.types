=== tests/cases/conformance/types/conditional/inferTypes2.ts ===
// Repro from #22755

export declare function foo<T>(obj: T): T extends () => infer P ? P : never;
>foo : <T>(obj: T) => T extends () => infer P ? P : never
>T : T
>obj : T
>T : T
>T : T
>P : P
>P : P

export function bar<T>(obj: T) {
>bar : <T>(obj: T) => T extends () => infer P ? P : never
>T : T
>obj : T
>T : T

    return foo(obj);
>foo(obj) : T extends () => infer P ? P : never
>foo : <T>(obj: T) => T extends () => infer P ? P : never
>obj : T
}

